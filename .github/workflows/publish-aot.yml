name: Publish AOT Builds
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  build-native:
    strategy:
      matrix:
        include:
          - os: windows-latest
            name: windows
          - os: ubuntu-latest
            name: linux
          - os: macos-latest
            name: macos
      fail-fast: false
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9"
      - name: Build ${{ matrix.name }}
        run: dotnet publish
      - name: Upload ${{ matrix.name }} Artifact
        uses: actions/upload-artifact@v4
        with:
          path: artifacts/publish/SharpTree/release/SharpTree*
          name: ${{ matrix.name }}-build
          compression-level: 0
  build-docker:
    strategy:
      matrix:
        include:
          - target: linux-musl-x64
            name: linux-musl-x64
            platform: linux/amd64
            tag: 9.0-preview-alpine-aot-amd64
          - target: linux-x64
            name: linux-x64
            platform: linux/amd64
            tag: 9.0-preview-azurelinux3.0-aot-amd64
            # - target: linux-musl-arm64
            #   name: linux-musl-arm64
            #   platform: linux/arm64
            #   tag: 9.0-preview-alpine-aot-arm64v8
            # - target: linux-arm64
            #   name: linux-arm64
            #   platform: linux/arm64
            #   tag: 9.0-preview-azurelinux3.0-aot-arm64v8
      fail-fast: false
    runs-on: ubuntu-latest
    timeout-minutes: 10
    container:
      image: mcr.microsoft.com/dotnet/nightly/sdk:${{ matrix.tag }}
      # options: --platform ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: Build ${{ matrix.target }}
        run: dotnet publish
      - name: Upload ${{ matrix.target }} Artifact
        uses: actions/upload-artifact@v4
        with:
          path: artifacts/publish/SharpTree/release/SharpTree*
          name: ${{ matrix.name }}-build
          compression-level: 0
  create-prerelease:
    needs: [build-native, build-docker]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Unzip and rename artifacts
        run: |
          mkdir unzipped
          for dir in artifacts/*-build; do
            platform=$(basename "$dir" -build)
            unzip -j "$dir" -d "unzipped/$platform"
            for file in unzipped/$platform/*; do
              if [[ -f "$file" ]]; then
                extension="${file##*.}"
                new_name="${platform}-SharpTree.${extension}"
                mv "$file" "unzipped/$platform/$new_name"
              fi
            done
          done
      - name: Create prerelease
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag_name="v$(date +'%Y.%m.%d-%H%M')"
          gh release create $tag_name \
            --title "Prerelease $tag_name" \
            --notes "Auto-generated prerelease for commit ${{ github.sha }}" \
            --prerelease \
            unzipped/*/*
